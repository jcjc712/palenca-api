version: "3.8"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backendnetwork
    environment:
      PYTHONDONTWRITEBYTECODE: 1
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      API_HOST: "${API_HOST}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      SECRET_KEY: "${SECRET_KEY}"
      JWT_SECRET_KEY: "${JWT_SECRET_KEY}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      FLASK_APP: "src/app.py"
      FLASK_ENV: "development"
      FLASK_DEBUG: "True"
      FLASK_RUN_PORT: 8000
  mysql:
    image: mysql:8.0
    security_opt:
      - seccomp:unconfined
    volumes:
      - ./mysql:/var/lib/mysql
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - backendnetwork
    ports:
      - "3306:3306"
networks:
  backendnetwork:
    driver: bridge
